app:
  kelvin:
    core:
      data_models:
        - name: raw.float32
          version: 2.0.0
      interface:
        client:
          args: []
          executable: run_app
          period: 10.0
          spawn: true
        type: client
      language:
        python:
          entry_point: data_labeling_app.data_labeling_app:App
          requirements: requirements.txt
        type: python
      logging_level: INFO
      runtime:
        historize_inputs: false
        historize_outputs: true
        type: opcua
      version: 4.0.0
      connections:
        - name: input-connection
          type: opcua
          opcua:
            endpoint: opc.tcp://esp-modbus.app:48010
            registry_map:
              parameters: []
              inputs:
                - name: input_metric
                  node: ns=2;s=pump_intake_temperature
                  access: RO
              outputs: []
      inputs:
        - name: input_metric
          data_model: raw.float32
      outputs: []
    images:
      base: ''
      builder: ''
    system_packages: []
  type: kelvin
system:
  environment_vars:
    - name: ACP_NAME
      value: "beta-squad4-acp2"
    - name: METRIC_SOURCE
      value: "rpa-driver-downstream-data"
    - name: METRIC_KEY
      value: "ns=2;s=pump_intake_temperature"
    - name: METRIC_TYPE
      value: "raw.float32"
    - name: LABEL_NAME
      value: "metric-above-threshold"
    - name: METRIC_THRESHOLD
      value: "10"
    - name: URL
      value: "https://beta.kelvininc.com"
    - name: DLSUSER
      #value: <% secrets.jumpsuser %>
      value: "jumps"  
    - name: DLPASSWORD
      #value: <% secrets.jumpspassword %>
      value: "Jumps12345678"
info:
  description: Create a data label based on certain criteria
  name: data-labeling-app
  title: data-labeling-app
  version: 1.0.0
spec_version: 1.1.0
